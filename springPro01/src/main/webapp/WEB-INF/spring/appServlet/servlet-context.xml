<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- 정적자원들 설정<assets>(이미지파일, css, js등등..) 을 설정 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 컨트롤러에서 설정한 view설정관련 부분 
	예시 ) 컨트롤러에서 view를 "home"으로 지정하면-->
					<!-- 여기부터 기존의 view resolver 시작-->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->
					<!-- 여기부터 기존의 view resolver 끝-->
	
								<!-- tiles 시작-->
   <!-- tiles설정-->
   <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
      <beans:property name="definitions">
         <beans:list>
            <beans:value>classpath:tiles/*.xml</beans:value>
         </beans:list>
      </beans:property>
      <beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
   </beans:bean> 
   
   <!-- tiles관련 Bean등록-->
   <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
      <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/> 
   </beans:bean> 
								
								<!-- tiles 끝-->
	
	<!--  Controller 파일의 위치 설정
	참고
	@Controller
	@Service 
	 jsp에서 우리가 만든 이와 같은것들을 항상 새로이 만들 필요가 없다는 듯이다.
	 
	@Repositoy
	db와 접근하는 dao의 역할과 비슷해보인다.
	
	@autowired
	의존성 자동주입
	-->
	<context:component-scan base-package="com.mycom.app" />
	
	
	
</beans:beans>
